"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const jwt = __importStar(require("jose"));
const strings = __importStar(require("../strings"));
/**
 * Parses /api/ap output
 *
 * @param apContent The content of https://eduvulcan.pl/api/ap
 * @returns {object}
 */
exports.default = async (apContent) => {
    // parse /api/ap output
    let apJson = JSON.parse(apContent.split('value=\'')[1].split('\' />')[0]);
    const validationArray = [];
    // check for expired tokens
    apJson.Tokens.forEach(token => {
        const decodedJwt = jwt.decodeJwt(token);
        if (decodedJwt.exp < Math.floor(Date.now() / 1000)) {
            validationArray.push(false);
        }
        else {
            validationArray.push(true);
        }
    });
    if (validationArray.includes(false)) {
        const headers = {
            "Content-Type": "application/json",
            "Accept": "application/json",
            "User-Agent": strings.USER_AGENT,
            "Authorization": `Bearer ${apJson.AccessToken}`,
            "vapi": strings.VAPI,
            "vcanonicalurl": "api%2fap",
            "vdate": new Date().toUTCString(),
            "vos": strings.OPERATING_SYSTEM,
            "vversioncode": strings.VERSION_CODE,
        };
        const req = await fetch(`https://eduvulcan.pl/api/ap`, {
            method: "GET",
            headers: headers
        });
        const text = await req.text();
        apJson = JSON.parse(text.split('value=\'')[1].split('\' />')[0]);
    }
    return apJson;
};
